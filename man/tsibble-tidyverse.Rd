% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr-extend.R, R/tidyr-verbs.R
\name{tsibble-tidyverse}
\alias{tsibble-tidyverse}
\alias{transmute.tbl_ts}
\alias{summarise.tbl_ts}
\alias{gather.tbl_ts}
\title{Tidyverse methods for tsibble}
\usage{
\method{transmute}{tbl_ts}(.data, ...)

\method{summarise}{tbl_ts}(.data, ...)
}
\arguments{
\item{.data, data}{A \code{tbl_ts}.}

\item{...}{Same arguments accepted as its tidyverse generic.}
}
\description{
Tidyverse methods for tsibble
}
\details{
Current dplyr verbs that support tsibble:

\code{\link[dplyr:filter]{dplyr::filter()}}, \code{\link[dplyr:slice]{dplyr::slice()}}, \code{\link[dplyr:arrange]{dplyr::arrange()}}, \code{\link[dplyr:select]{dplyr::select()}},
\code{\link[dplyr:transmute]{dplyr::transmute()}}, \code{\link[dplyr:mutate]{dplyr::mutate()}}, \code{\link[dplyr:summarise]{dplyr::summarise()}}, \code{\link[dplyr:group_by]{dplyr::group_by()}},
\code{\link[dplyr:left_join]{dplyr::left_join()}}, \code{\link[dplyr:right_join]{dplyr::right_join()}}, \code{\link[dplyr:full_join]{dplyr::full_join()}},
\code{\link[dplyr:inner_join]{dplyr::inner_join()}}, \code{\link[dplyr:semi_join]{dplyr::semi_join()}}, \code{\link[dplyr:anti_join]{dplyr::anti_join()}},
\code{\link[dplyr:nest_join]{dplyr::nest_join()}}

Current tidyr verbs that support tsibble:

\code{\link[tidyr:gather]{tidyr::gather()}}, \code{\link[tidyr:spread]{tidyr::spread()}}, \code{\link[tidyr:nest]{tidyr::nest()}}, \code{\link[tidyr:fill]{tidyr::fill()}},
\code{\link[tidyr:drop_na]{tidyr::drop_na()}}
}
\section{Column-wise verbs}{

\itemize{
\item The index variable cannot be dropped for a tsibble object.
\item When any key variable is modified, a check on the validity of the resulting
tsibble will be performed internally.
\item Use \code{as_tibble()} to convert tsibble to a general data frame.
}
}

\section{Row-wise verbs}{

A warning is likely to be issued, if observations are not arranged in
past-to-future order.
}

\section{Join verbs}{

Joining with other data sources triggers the check on the validity of the
resulting tsibble.
}

\examples{
library(dplyr, warn.conflicts = FALSE)
# Sum over sensors
pedestrian \%>\%
  index_by() \%>\%
  summarise(Total = sum(Count))
# shortcut
pedestrian \%>\%
  summarise(Total = sum(Count))
# Back to tibble
pedestrian \%>\%
  as_tibble() \%>\%
  summarise(Total = sum(Count))
library(tidyr)
# reshaping examples from tidyr
stocks <- tsibble(
  time = as.Date("2009-01-01") + 0:9,
  X = rnorm(10, 0, 1),
  Y = rnorm(10, 0, 2),
  Z = rnorm(10, 0, 4)
)
(stocksm <- stocks \%>\% gather(stock, price, -time))
stocksm \%>\% spread(stock, price)
}
